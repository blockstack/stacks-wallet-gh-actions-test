name: Publish version

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    env:
      STX_NETWORK: ${{ matrix.stx_network }}

    strategy:
      fail-fast: true
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        stx_network: [testnet, mainnet]
        include:
          - os: macos-latest
            NPM_COMMAND: mac

          - os: ubuntu-latest
            NPM_COMMAND: linux

          - os: windows-latest
            NPM_COMMAND: win

    outputs:
      version: ${{ steps.extract_version.outputs.version }}

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Variables
        id: vars
        run: |
          echo "::set-output name=branch_name::$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=pull_request_id::$(echo $GITHUB_REF)"

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Extract version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.0.6

      #
      # Windows build breaks when using the package.json script to install `app/` packages
      # using separate run to install those packages separately
      - name: Install packages
        run: yarn --frozen-lockfile --ignore-scripts

      - name: Install `app/` packages
        run: cd app && yarn --frozen-lockfile --ignore-scripts

      - name: Build releases
        run: ./node_modules/.bin/cross-env yarn package-${{ matrix.NPM_COMMAND }}
        env:
          SHA: ${{ github.event.pull_request.head.sha }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_REQUEST: ${{ steps.vars.outputs.pull_request_id }}
          BRANCH_NAME: ${{ steps.vars.outputs.branch_name }}
          WALLET_VERSION: ${{ steps.extract_version.outputs.version }}

      - uses: actions/upload-artifact@v2
        name: Windows upload
        if: matrix.os == 'windows-latest'
        with:
          name: stacks-wallet-${{ matrix.stx_network }}-${{ matrix.NPM_COMMAND }}
          path: |
            release/**/*.exe
            release/**/*.msi

      - uses: actions/upload-artifact@v2
        name: MacOS upload
        if: matrix.os == 'macos-latest'
        with:
          name: stacks-wallet-${{ matrix.stx_network }}-${{ matrix.NPM_COMMAND }}
          path: release/**/*.dmg

      - uses: actions/upload-artifact@v2
        name: Linux upload
        if: matrix.os == 'ubuntu-latest'
        with:
          name: stacks-wallet-${{ matrix.stx_network }}-${{ matrix.NPM_COMMAND }}
          path: |
            release/**/*.deb
            release/**/*.rpm

  create-release:
    runs-on: ubuntu-latest
    needs:
      - build

    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.build.outputs.version }}
          release_name: Release v${{ needs.build.outputs.version }}
          draft: false
          prerelease: ${{ contains(needs.build.outputs.version, 'beta') }}

  upload-release-assets:
    runs-on: ubuntu-latest
    needs:
      - build
      - create-release

    # strategy:
    #   max-parallel: 1
    #   matrix:
    #     stx_network: [testnet, mainnet]
    #     ext: [dmg, msi, deb, rpm]
    #     include:
    #       - ext: dmg
    #         os: mac
    #       - ext: msi
    #         os: win
    #       - ext: rpm
    #         os: linux
    #       - ext: deb
    #         os: linux

    steps:
      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          path: release

      - run: ls -la release/stacks-wallet-mainnet-linux

      # - name: Upload Release Asset .${{ matrix.ext }}
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ needs.create-release.outputs.release_upload_url }}
      #     asset_path: release/stacks-wallet-${{ matrix.stx_network }}-${{ matrix.os }}/stacks-wallet.${{ matrix.stx_network }}.${{ matrix.ext }}
      #     asset_name: stacks-wallet.testnet.v${{ needs.build.outputs.version }}.${{ matrix.ext }}
      #     asset_content_type: application/octet-stream

      - name: Sleep for 10 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '10s'

      - name: Upload Release Asset Mainnet .rpm
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release_upload_url }}
          asset_path: release/stacks-wallet-mainnet-linux/stacks-wallet.mainnet.rpm
          asset_name: stacks-wallet.testnet.v${{ needs.build.outputs.version }}.rpm
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Testnet .rpm
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release_upload_url }}
          asset_path: release/stacks-wallet-testnet-linux/stacks-wallet.testnet.rpm
          asset_name: stacks-wallet.testnet.v${{ needs.build.outputs.version }}.rpm
          asset_content_type: application/octet-stream

      - name: Sleep for 10 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '10s'

      - name: Upload Release Asset Testnet .deb
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release_upload_url }}
          asset_path: release/stacks-wallet-testnet-linux/stacks-wallet.testnet.deb
          asset_name: stacks-wallet.testnet.v${{ needs.build.outputs.version }}.deb
          asset_content_type: application/octet-stream

      - name: Sleep for 10 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '10s'

      - name: Upload Release Asset Testnet .msi
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release_upload_url }}
          asset_path: release/stacks-wallet-testnet-win/stacks-wallet.testnet.msi
          asset_name: stacks-wallet.testnet.v${{ needs.build.outputs.version }}.msi
          asset_content_type: application/octet-stream

      - name: Sleep for 10 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '10s'

      - name: Upload Release Asset Testnet .dmg
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release_upload_url }}
          asset_path: release/stacks-wallet-testnet-mac/stacks-wallet.testnet.dmg
          asset_name: stacks-wallet.testnet.v${{ needs.build.outputs.version }}.dmg
          asset_content_type: application/octet-stream

      - name: Sleep for 10 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '10s'

      - name: Upload Release Asset Mainnet .deb
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release_upload_url }}
          asset_path: release/stacks-wallet-mainnet-linux/stacks-wallet.mainnet.deb
          asset_name: stacks-wallet.testnet.v${{ needs.build.outputs.version }}.deb
          asset_content_type: application/octet-stream

      - name: Sleep for 10 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '10s'

      - name: Upload Release Asset Mainnet .msi
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release_upload_url }}
          asset_path: release/stacks-wallet-mainnet-win/stacks-wallet.mainnet.msi
          asset_name: stacks-wallet.testnet.v${{ needs.build.outputs.version }}.msi
          asset_content_type: application/octet-stream

      - name: Sleep for 10 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '10s'

      - name: Upload Release Asset Mainnet .dmg
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release_upload_url }}
          asset_path: release/stacks-wallet-mainnet-mac/stacks-wallet.mainnet.dmg
          asset_name: stacks-wallet.testnet.v${{ needs.build.outputs.version }}.dmg
          asset_content_type: application/octet-stream

  announce-release:
    runs-on: ubuntu-latest
    needs:
      - upload-release-assets

    steps:
      - name: Discord notification
        # Only run if a new release was published
        if: needs.release.outputs.new_release_published == 'true'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: |
           New release: [Stacks Wallet `v${{needs.release.outputs.new_release_version}}`](https://github.com/${{ github.repository }}/releases/tag/v${{ needs.build.outputs.version }}))
