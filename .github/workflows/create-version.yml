name: Create version

on:
  push:
    branches:
      - 'master'
      - 'beta'
    tags-ignore:
      - '**'
    paths-ignore:
      - '**/CHANGELOG.md'
      - '**/package.json'
      - '**/yarn.lock'
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Cache node_modules
        id: cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-yarn

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          yarn
          yarn add -ED @actions/core
        env:
          STX_NETWORK: testnet

      - name: Lint eslint
        run: yarn lint:eslint

      - name: Check exact versions
        uses: ./.github/actions/check-version-lock

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Cache node_modules
        id: cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-yarn

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn
        env:
          STX_NETWORK: testnet

      - name: Build prod
        run: yarn build
        env:
          STX_NETWORK: testnet

      - name: Run jest
        run: yarn test

  release:
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
    needs:
      - lint
      - test

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2.5.3
        id: semantic
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          SEMANTIC_RELEASE_PACKAGE: ${{ github.workflow }}
        with:
          # These plugins aren't packaged with semantic-release by default. So specify them here to ensure they get installed during this Github Action
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
